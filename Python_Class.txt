Python is an Object-oriented programming language.
Class: It's like an object Constructor or "Blueprint" for creating objects
Keyword:- class:
Example1: 
class MyClass:
	x=1
p1 = MyClass
print(p1)

__init__() function:
All classes have a function called __init__(), which is executed when the class is being initiated.
__init__() assigns the values to object , or other operations that are necessary to do when object is created.

Example: 
class Person:
	def __init__(self,name,age):
		self.name = name
		self.age = age
 p = person("Shylu",23)
print(p.name)
print(p.age)

__str__() function:
controls what should returned when the object represents the string
Example:
class Person:
	def __init__(self,name,age):
		self.name = name
		self.age = age
	def __str__(self):
		return f"{self.name}({self.age})"
p = Person("Shylu",24)
print(p)

Object Methods:
Objects contains methods. Methods in object are functions that belong to the object
Example:
class Person:
    def __init__(self,name,marks):
        self.name = name
        self.marks = marks
    def myFunct(self):
        print("My name is "+ self.name)
    
p = Person("Shylu",99)
p.myFunct()

Self: self parameter is a reference to the current instance of the class, access the variable belong to the class.

Pass: 
class cannot be empty so it use a Pass function.
Example:
class Person:
 	pass

Example: Complex Number
class MyComplexNumber
	def __init__(self,real=0,imag=0):
		print("MyComplexNumber Constructor Executing....")
		self.real_part= real
		self.imag_part = imag
	def displayComplex(self):	
		print("{0}+{1}j".format(self.real_part,self.imag_part)
